defmodule DeeperHub.Inspector.Behaviours.InspectorBehaviour do
  @moduledoc """
  Define o comportamento padr√£o para inspetores do sistema üîç

  Este m√≥dulo estabelece a interface que todos os inspetores devem implementar,
  permitindo an√°lise e inspe√ß√£o de diferentes tipos de elementos do sistema.
  """

  @doc """
  Inspeciona um elemento e retorna informa√ß√µes detalhadas sobre ele üîé

  ## Par√¢metros

    * `element` - O elemento a ser inspecionado
    * `options` - Op√ß√µes para personalizar a inspe√ß√£o

  ## Retorno

  Retorna um mapa com informa√ß√µes detalhadas sobre o elemento inspecionado.
  """
  @callback inspect(element :: any(), options :: keyword()) :: map()

  @doc """
  Verifica se o elemento √© suportado por este inspetor ‚úÖ

  ## Par√¢metros

    * `element` - O elemento a ser verificado

  ## Retorno

  Retorna `true` se o elemento for suportado, ou `false` caso contr√°rio.
  """
  @callback supported?(element :: any()) :: boolean()

  @doc """
  Retorna o tipo de elemento que este inspetor suporta üìã

  ## Retorno

  Retorna um √°tomo representando o tipo de elemento suportado.
  """
  @callback element_type() :: atom()

  @doc """
  Extrai metadados espec√≠ficos do elemento inspecionado üìä

  ## Par√¢metros

    * `element` - O elemento do qual extrair metadados
    * `options` - Op√ß√µes para personalizar a extra√ß√£o

  ## Retorno

  Retorna um mapa com metadados do elemento.
  """
  @callback extract_metadata(element :: any(), options :: keyword()) :: map()

  @doc """
  Formata o resultado da inspe√ß√£o para exibi√ß√£o üñ•Ô∏è

  ## Par√¢metros

    * `inspection_result` - O resultado da inspe√ß√£o
    * `format` - O formato desejado para a sa√≠da (:text, :json, :html)

  ## Retorno

  Retorna uma string formatada com o resultado da inspe√ß√£o.
  """
  @callback format_result(inspection_result :: map(), format :: atom()) :: String.t()

  @optional_callbacks [format_result: 2]
end
